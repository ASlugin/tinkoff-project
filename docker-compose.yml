version: '3.9'

services:
  scrapper:
    image: ghcr.io/aslugin/scrapper:latest
    container_name: scrapper
    depends_on:
      - postgresql
    restart: always
    ports:
      - "8080:8080"
      - "8082:8082"
    networks:
      - backend

  bot:
    image: ghcr.io/aslugin/bot:latest
    container_name: bot
    depends_on:
      - scrapper
    restart: always
    ports:
      - "8081:8081"
      - "8083:8083"
    networks:
      - backend

  postgresql:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: scrapper
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 123456
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - backend

  liquibase-migrations:
    image: liquibase/liquibase:4.18
    container_name: liquibase
    depends_on:
      - postgresql
    restart: on-failure
    command:
      - --hub-mode=off
      - --changelog-file=master.xml
      - --driver=org.postgresql.Driver
      - --url=jdbc:postgresql://postgresql:5432/scrapper
      - --username=postgres
      - --password=123456
      - update
    volumes:
      - ./scrapper/migrations:/liquibase/changelog
    networks:
      - backend

  rabbit:
    image: rabbitmq:3-management
    container_name: rabbit
#    hostname: rabbitmq
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: -rabbit disk_free_limit 2147483648
    volumes:
      - rabbit-data:/var/lib/rabbitmq
    networks:
      - backend

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - backend

  grafana:
    image: grafana/grafana-oss
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: false
    networks:
      - backend

networks:
  backend:
    driver: bridge

volumes:
  postgres-data:
  rabbit-data:
  prometheus:
  grafana:
